PART A


/*
Attention!
Configuration  for push-button project :

Connect portA to LEDs
Jumpers of portA are : 5V, pull up ( both of the to the left side )

Connect portE to push-buttons
Jumpers of portE are : 3V3, pull up ( top one to right, other to left )

*/



void Wait() {
 Delay_ms(1000);
}

void main() {

 AD1PCFG = 0xFFFF;

 DDPCON.JTAGEN = 0; // disable JTAG

 TRISA = 0x0000;  //portA is output to turn on LEDs.
 TRISE = 0XFFFF;  //portE is inputs to read push-buttons.

 LATA = 0Xffff;
 LATE = 0X0000;

 // single LED blink
 LATA=0xffff;
 Wait();
 LATA=0x0000;
 Wait();


 while(1)
 {
  portA = portE; // read push-buttons and assign them to LEDs
 }//while

}//main

PART B

void main() {

 AD1PCFG = 0xFFFF; // Configure
 DDPCON.JTAGEN = 0; // disable JTAG

 TRISD = 0x0000;
 PORTD = 0Xffff;


 TRISE = 0xFFFF; //portE is used as an input (for push buttons)
 PORTE = 0X0000;



 while(1) {

  PORTDbits.RD1 = PORTEbits.RE0; // button 0, counter clockwise
  PORTDbits.RD2 = PORTEbits.RE1; // button 1, clockwise

 }
}


PART C
/*
Configuration for the code below:

Connect portA to J1 Port of 4 Digit Seven Segment Module
Jumpers of portA are : 5V, pull down ( top one to left, other to right )

Connect portE to J2 Port of 4 Digit Seven Segment Module
Jumpers of portE are : 5V, pull down ( top one to left, other to right )

*/

// Hexadecimal values for digits in 7 segment
unsigned char binary_pattern[]={0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F};

int first;
int second;
int third;
int forth;
int i = 1;
int j;
int temp;
int result;
void main() {

 AD1PCFG = 0xFFFF;      // Configure AN pins as digital I/O
 JTAGEN_bit = 0;        // Disable JTAG

 TRISA = 0x00;  //portA is output to D
 TRISE = 0X00;  //portE is output to AN

 while(1)
 {
     
     if (i <= 6) {
        first = i;
	if( first/10 == 1 ) {
		first = (first%10) + 1;
	}
        second = first++;
	if( second/10 == 1 ) {
		second = (second%10) + 1;
	}
        third = second++;
	if( third/10 == 1 ) {
		third = (third%10) + 1;
	}
        forth = third++;
	if( forth/10 == 1 ) {
		forth = (forth%10) + 1;
	}
     }
     else if (i<=9) {
     
     for(j = 0; j <= 1001; j++){
                    // Digit 1
     PORTA=binary_pattern[first];     // Put 2 to the second digit
     PORTE=0x01;                  // Open second digit
     Delay_ms(1);

     // Digit 2
     PORTA=binary_pattern[second];     // Put 2 to the second digit
     PORTE=0x02;                  // Open second digit
     Delay_ms(1);

     // Digit 3
     PORTA=binary_pattern[third];
     PORTE=0x04;
     Delay_ms(1);

     // Digit 4
     PORTA=binary_pattern[forth];
     PORTE=0x08;
     Delay_ms(1);
           if(j==1000){
               i++;
           }
     }

 }

}//main